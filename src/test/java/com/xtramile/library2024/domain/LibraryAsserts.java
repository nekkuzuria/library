package com.xtramile.library2024.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LibraryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibraryAllPropertiesEquals(Library expected, Library actual) {
        assertLibraryAutoGeneratedPropertiesEquals(expected, actual);
        assertLibraryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibraryAllUpdatablePropertiesEquals(Library expected, Library actual) {
        assertLibraryUpdatableFieldsEquals(expected, actual);
        assertLibraryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibraryAutoGeneratedPropertiesEquals(Library expected, Library actual) {
        assertThat(expected)
            .as("Verify Library auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibraryUpdatableFieldsEquals(Library expected, Library actual) {
        assertThat(expected)
            .as("Verify Library relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getEstablishedDate()).as("check establishedDate").isEqualTo(actual.getEstablishedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLibraryUpdatableRelationshipsEquals(Library expected, Library actual) {
        assertThat(expected)
            .as("Verify Library relationships")
            .satisfies(e -> assertThat(e.getLocation()).as("check location").isEqualTo(actual.getLocation()));
    }
}
