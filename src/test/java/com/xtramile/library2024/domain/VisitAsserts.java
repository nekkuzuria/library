package com.xtramile.library2024.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VisitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVisitAllPropertiesEquals(Visit expected, Visit actual) {
        assertVisitAutoGeneratedPropertiesEquals(expected, actual);
        assertVisitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVisitAllUpdatablePropertiesEquals(Visit expected, Visit actual) {
        assertVisitUpdatableFieldsEquals(expected, actual);
        assertVisitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVisitAutoGeneratedPropertiesEquals(Visit expected, Visit actual) {
        assertThat(expected)
            .as("Verify Visit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVisitUpdatableFieldsEquals(Visit expected, Visit actual) {
        assertThat(expected)
            .as("Verify Visit relevant properties")
            .satisfies(e -> assertThat(e.getDate()).as("check date").isEqualTo(actual.getDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVisitUpdatableRelationshipsEquals(Visit expected, Visit actual) {
        assertThat(expected)
            .as("Verify Visit relationships")
            .satisfies(e -> assertThat(e.getLibrary()).as("check library").isEqualTo(actual.getLibrary()))
            .satisfies(e -> assertThat(e.getLibrarian()).as("check librarian").isEqualTo(actual.getLibrarian()))
            .satisfies(e -> assertThat(e.getVisitor()).as("check visitor").isEqualTo(actual.getVisitor()));
    }
}
